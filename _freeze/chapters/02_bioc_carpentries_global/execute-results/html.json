{
  "hash": "694eb16fe18ef042d450d349b755ead2",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexecute: \n  echo: true\n  eval: false\n  warning: false\n---\n\n\n# Global distribution of Bioconductor Carpentry workshops and certified instructors\n\nHere, we will explore the global distribution of Carpentries-certified\ninstructors on Bioconductor and Bioc Carpentries workshops that have been \ntaught so far. Up-to-date data were obtained from \n[this repository](https://github.com/mblue9/bioconductor-carpentries).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123) # for reproducibility\n\n# Load required packages\nlibrary(here)\nlibrary(tidyverse)\nlibrary(tidygeocoder)\nlibrary(passport)\nlibrary(rvest)\nlibrary(countrycode)\n```\n:::\n\n\n## Obtaining and visualizing data\n\nWe will start by obtaining data for Carpentries-certified instructors on \nBioconductor.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read instructor data\ninstructors <- read_tsv(\n    \"https://raw.githubusercontent.com/Bioconductor/bioconductor-training/refs/heads/devel/carpentry/carpentries_instructors.tsv\",\n    show_col_types = FALSE\n) |>\n    mutate(\n        status = factor(\n            status, levels = c(\n                \"Certified\", \n                \"Certified - CZI Year 1\", \n                \"Certified - CZI Year 2\",\n                \"In Progress\"\n            )\n        )\n    ) |>\n    geocode(city = \"city\")\n\n# Read workshops data\nworkshops <- read_tsv(\n    \"https://raw.githubusercontent.com/Bioconductor/bioconductor-training/refs/heads/devel/carpentry/carpentries_workshops.tsv\",\n    show_col_types = FALSE\n) |>\n    filter(city != \"Online\") |>\n    geocode(city = \"city\")\n```\n:::\n\n    \nNow, let's plot the geographic distribution of instructors per country.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get a data frame of instructors per country to use as 'fill'\nn_per_country <- count(instructors, country, sort = TRUE) |>\n    mutate(n = as.integer(n)) |>\n    as.data.frame() |>\n    mutate(country = str_replace_all(country, c(\n        \"United States\" = \"USA\",\n        \"United Kingdom\" = \"UK\"\n    )))\n\n# Plot world map with frequencies\nworld_map <- map_data(\"world\") |> filter(region != \"Antarctica\")\n\nmap_data <- world_map |> \n    left_join(n_per_country |> rename(region = country))\n\np_instructors <- ggplot() +\n    geom_map(\n        map = world_map, data = map_data,\n        aes(long, lat, fill = n, map_id = region), \n        color = \"white\", alpha = 0.7, linewidth = 0.2\n    ) +\n    theme_void() +\n    scale_fill_gradient(\n        low = \"#56B1F7\", high = \"#132B43\",\n        breaks = seq(2, 20, by = 4)\n    ) +\n    labs(\n        title = \"Geographic distribution of Carpentries-certified instructors\",\n        fill = \"N\",\n        color = \"Status\"\n    ) +\n    geom_point(\n        data = instructors, \n        aes(x = long, y = lat, color = status), \n        size = 2, stroke = 0.3, alpha = 0.7\n    ) +\n    ggplot2::scale_color_manual(\n        values = c(\"firebrick2\", \"goldenrod2\", \"mediumpurple3\", \"deepskyblue3\")\n    ) +\n    guides(\n        color = guide_legend(position = \"bottom\"),\n        fill = guide_colorbar(position = \"right\")\n    ) +\n    theme(plot.title = element_text(hjust = 0.5))\n```\n:::\n\n\nThen, we'll do the same for Bioconductor Carpentry materials.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get a data frame of workshops per country to use as 'fill'\nworkshops_per_country <- workshops |>\n    filter(!is.na(country)) |>\n    count(country, sort = TRUE) |>\n    mutate(n = as.integer(n)) |>\n    as.data.frame() |>\n    mutate(country = str_replace_all(country, c(\n        \"United States\" = \"USA\",\n        \"United Kingdom\" = \"UK\"\n    )))\n\n# Plot world map with frequencies\nworld_map <- map_data(\"world\") |>\n    filter(region != \"Antarctica\")\n\nmap_data <- world_map |> \n    left_join(workshops_per_country |> rename(region = country))\n\np_workshops <- ggplot() +\n    geom_map(\n        map = world_map, data = map_data,\n        aes(long, lat, fill = n, map_id = region), \n        color = \"white\", alpha = 0.7, size = 0.2\n    ) +\n    theme_void() +\n    scale_fill_gradient(\n        low = \"#BAe4B3\", high = \"#006D2C\",\n        breaks = seq(2, 10, by = 2)\n    ) +\n    labs(\n        title = \"Geographic distribution of Bioconductor Carpentry workshops\",\n        fill = \"N\",\n        color = \"Workshop\"\n    ) +\n    geom_point(\n        data = workshops, \n        aes(x = long, y = lat, color = workshop), \n        size = 2, stroke = 0.3, alpha = 0.7\n    ) +\n    ggplot2::scale_color_manual(\n        values = c(\"#0072b2\", \"#d55e00\")\n    ) +\n    guides(\n        fill = guide_colorbar(position = \"right\"),\n        color = guide_legend(position = \"bottom\")\n    ) +\n    theme(plot.title = element_text(hjust = 0.5))\n```\n:::\n\n\n## Saving objects and plots {.unnumbered}\n\nLastly, we will save objects and plots in .rds files for further reuse.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plots\nsaveRDS(\n    p_instructors, compress = \"xz\",\n    file = here(\"products\", \"plots\", \"instructors_geodistro.rds\")\n)\n\nsaveRDS(\n    p_workshops, compress = \"xz\",\n    file = here(\"products\", \"plots\", \"workshops_geodistro.rds\")\n)\n\n# Tables\nworkshops_final <- workshops |>\n    janitor::clean_names() |>\n    dplyr::select(date, hosted_by, workshop, city = location, instructors, country = country_en)\n\ninstructors_final <- instructors |>\n    janitor::clean_names() |>\n    dplyr::select(name, institution, city = location, status, country = country_en)\n\nwrite_tsv(workshops_final, here(\"products\", \"tables\", \"carpentries_workshops.tsv\"))\nwrite_tsv(instructors_final, here(\"products\", \"tables\", \"carpentries_instructors.tsv\"))\n```\n:::\n\n\n## Session information {.unnumbered}\n\nThis document was created under the following conditions:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.4.1 (2024-06-14)\n os       Ubuntu 22.04.4 LTS\n system   x86_64, linux-gnu\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Arctic/Longyearbyen\n date     2025-03-09\n pandoc   3.1.11 @ /opt/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version date (UTC) lib source\n cli           3.6.3   2024-06-21 [1] CRAN (R 4.4.1)\n digest        0.6.36  2024-06-23 [1] CRAN (R 4.4.1)\n evaluate      0.24.0  2024-06-10 [1] CRAN (R 4.4.1)\n fastmap       1.2.0   2024-05-15 [1] CRAN (R 4.4.1)\n htmltools     0.5.8.1 2024-04-04 [1] CRAN (R 4.4.1)\n htmlwidgets   1.6.4   2023-12-06 [1] CRAN (R 4.4.1)\n jsonlite      1.8.8   2023-12-04 [1] CRAN (R 4.4.1)\n knitr         1.48    2024-07-07 [1] CRAN (R 4.4.1)\n rlang         1.1.4   2024-06-04 [1] CRAN (R 4.4.1)\n rmarkdown     2.27    2024-05-17 [1] CRAN (R 4.4.1)\n sessioninfo   1.2.2   2021-12-06 [1] CRAN (R 4.4.1)\n xfun          0.46    2024-07-18 [1] CRAN (R 4.4.1)\n yaml          2.3.9   2024-07-05 [1] CRAN (R 4.4.1)\n\n [1] /home/faalm/R/x86_64-pc-linux-gnu-library/4.4\n [2] /usr/local/lib/R/site-library\n [3] /usr/lib/R/site-library\n [4] /usr/lib/R/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}